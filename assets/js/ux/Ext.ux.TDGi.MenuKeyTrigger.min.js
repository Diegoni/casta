
Ext.ns('Ext.ux.TDGi');Ext.ux.TDGi.MenuKeyTrigger=Ext.extend(Object,{constructor:function(c){c=c||{};this.initialConfig=c;Ext.apply(this,c);},init:function(p){this.menu=p;p.on({scope:this,buffer:110,destroy:this.onDestroy,show:{single:true,fn:this.onMenuRenderAttachKeyMap}});p.on('show',function(menu){menu.el.focus();});},onDestroy:function(){this.keyMapkeys=null;this.menu=null;p.un({scope:this,keydown:this.onKeyMapKeyFire});},onMenuRenderAttachKeyMap:function(menu){this.keyMapKeys=this.compileKeys(menu);var keys=[];for(var key in this.keyMapKeys){keys.push(key);}
menu.mon(menu.el,{scope:this,keydown:this.onKeyMapKeyFire});menu.el.focus();},compileKeys:function(menu){var keys={};var items=menu.items;items.each(function(item){if(item.triggerKey){keys[item.triggerKey.substr(0,1).toUpperCase()]=item;}
if(item.menu&&this.selfPropegate){var plugin=new this.constructor(this.initialConfig);plugin.init(item.menu);item.menu.on('show',this.activateFirstMenuItem);}},this);return keys;},activateFirstMenuItem:function(menu){var menuItems=menu.items;if(menuItems.items.length>0){if(menuItems.items[0].activate){menuItems.items[0].activate(true);}}},onKeyMapKeyFire:function(e){var charCode=e.getCharCode(),key=String.fromCharCode(charCode),item;if(this.activeItem&&charCode==Ext.EventObject.ENTER){if(this.activeItem.handler){this.activeItem.onClick(e);}
return;}
if(item=this.keyMapKeys[key]){this.menu.items.each(function(i){i.deactivate();});this.menu.activeItem=this.activeItem=item;if(this.requireEnter){item.activate(true);return;}
else{if(item.handler){item.onClick(e);}
else if(item.menu){item.activate(true);}}
item.activate(true);}
else{delete this.activeItem;}}});Ext.preg('ux.MenuKeyTrigger',Ext.ux.TDGi.MenuKeyTrigger);